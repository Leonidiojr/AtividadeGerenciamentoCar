/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import application.Database;
import static application.MainApp.ListaClientes;
import static application.MainApp.ListaFuncionarios;
import static application.MainApp.ListaOficinas;
import static application.MainApp.ListaPagamentos;
import static application.MainApp.ListaPecas;
import static application.MainApp.ListaServicos;
import static application.MainApp.ListaItensPecas;
import static application.MainApp.ListaItensServicos;
import static application.MainApp.ListaVeiculos;
import static application.MainApp.ListaPropriedades;
import static application.MainApp.ListaMarcas;
import static application.MainApp.ListaModelos;
import static application.MainApp.ListaAcessorios;
import static application.MainApp.ListaPedidos;
import static application.MainApp.ListaBoxes;

import utils.Utils;
import java.awt.Cursor;
import javax.swing.JOptionPane;
import static application.MainApp.ListaOrdensServicos;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author leoni
 */
public class frmSplash extends javax.swing.JDialog {

    /**
     * Creates new form frmSplash
     */
    public frmSplash(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        iniciarAtualizacaoTempo();
    }
    
 private void iniciarAtualizacaoTempo() {
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                if (jProgressBar1.getValue() == 100){                    
                    dispose();                    
                }
                jProgressBar1.setValue(jProgressBar1.getValue() + 10);
            }
        }, 0, 100);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jProgressBar1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Logo.png"))); // NOI18N
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel5.setAlignmentY(0.0F);
        jPanel1.add(jLabel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(319, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(301, 301, 301))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1070, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(515, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {    
            Thread.sleep(2000);                                            
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            if (Database.verificarPostgreSQL()){
                application.Database.prepareEnvironment();
                this.jProgressBar1.setValue(10);
                this.repaint();                                        
                this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));                
                ListaOficinas = application.MainApp.oficinaController.listarOficinas();
                ListaClientes = application.MainApp.ListaClientes;
                ListaFuncionarios = application.MainApp.ListaFuncionarios;
                ListaOrdensServicos = application.MainApp.ListaOrdensServicos;
                ListaItensPecas = application.MainApp.ListaItensPecas;
                ListaItensServicos = application.MainApp.ListaItensServicos;
                this.jProgressBar1.setValue(40);
                this.repaint();                                                        
                ListaBoxes = application.MainApp.ListaBoxes;
                ListaVeiculos = application.MainApp.veiculoController.listarVeiculos(); // Supondo que exista um método listarVeiculos
                ListaPropriedades = application.MainApp.propriedadeController.listarPropriedades(); // Supondo que exista um método listarPropriedades
                ListaPagamentos = application.MainApp.pagamentoController.listarPagamentos(); // Supondo que exista um método listarPagamentos
                ListaPedidos = application.MainApp.pedidoController.listarPedidos(); // Supondo que exista um método listarPedidos
                ListaPecas = application.MainApp.pecaController.listarPecas(); // Supondo que exista um método listarPecas
                ListaMarcas = application.MainApp.marcaController.listarMarcas(); // Supondo que exista um método listarMarcas
                ListaModelos = application.MainApp.modeloController.listarModelos(); // Supondo que exista um método listarModelos
                ListaAcessorios = application.MainApp.acessorioController.listarAcessorios(); // Supondo que exista um método listarAcessorios
                ListaServicos = application.MainApp.servicoController.listarServicos(); // Supondo que exista um método listarServicos
               
                this.jProgressBar1.setValue(70);
                this.repaint();                        
                this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));                
            } else {
                Utils.DialogBoxes.MessageBox("O Postgres não parece estar instalado! Cheque as configurações!", "Erro ao conectar!");                
            }             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na conexão ao banco de dados!");
        }       
        this.dispose();                

    
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSplash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSplash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSplash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSplash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmSplash dialog = new frmSplash(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
